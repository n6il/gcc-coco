/*****************************************************************************//*                                                                           *//*				    conio.h				     *//*                                                                           *//*			      Direct console I/O			     *//*                                                                           *//*                                                                           *//*                                                                           *//* (C) 1998-2000 Ullrich von Bassewitz                                       *//*               Wacholderweg 14                                             *//*               D-70597 Stuttgart                                           *//* EMail:        uz@musoftware.de                                            *//*                                                                           *//* Modified 2003-03-09 by James Dessart, to support the TRS-80 Colour Comp.  *//*                                                                           *//*                                                                           *//* This software is provided 'as-is', without any expressed or implied       *//* warranty.  In no event will the authors be held liable for any damages    *//* arising from the use of this software.                                    *//*                                                                           *//* Permission is granted to anyone to use this software for any purpose,     *//* including commercial applications, and to alter it and redistribute it    *//* freely, subject to the following restrictions:                            *//*                                                                           *//* 1. The origin of this software must not be misrepresented; you must not   *//*    claim that you wrote the original software. If you use this software   *//*    in a product, an acknowledgment in the product documentation would be  *//*    appreciated but is not required.                                       *//* 2. Altered source versions must be plainly marked as such, and must not   *//*    be misrepresented as being the original software.                      *//* 3. This notice may not be removed or altered from any source              *//*    distribution.                                                          *//*                                                                           *//*****************************************************************************//* * This is the direct console interface for gcc */#ifndef _CONIO_H#define _CONIO_H#define	CONIO_40_x_24_SCREEN		40#define	CONIO_80_x_24_SCREEN		80/*****************************************************************************//* 	      			   Functions	     			     *//*****************************************************************************/void init_screen( unsigned char width );/* initializes the screen at width characters wide */void clrscr (void);/* Clear the whole screen and put the cursor into the top left corner *//* Defined and implemented by libc *//* unsigned char kbhit (void); *//* Return true if there's a key waiting, return false if not */void  gotox (unsigned char x);/* Set the cursor to the specified X position, leave the Y position untouched */void  gotoy (unsigned char y);/* Set the cursor to the specified Y position, leave the X position untouched */void  gotoxy (unsigned char x, unsigned char y);/* Set the cursor to the specified position */unsigned char wherex (void);/* Return the X position of the cursor */unsigned char wherey (void);/* Return the Y position of the cursor */void  cputc (char c);/* Output one character at the current cursor position */void  cputcxy (unsigned char x, unsigned char y, char c);/* Same as "gotoxy (x, y); cputc (c);" */void  cputs (const char* s);/* Output a NUL terminated string at the current cursor position */void  cputsxy (unsigned char x, unsigned char y, const char* s);/* Same as "gotoxy (x, y); puts (s);" */char cgetc (void);/* Return a character from the keyboard. If there is no character available, * the functions waits until the user does press a key. If cursor is set to * 1 (see below), a blinking cursor is displayed while waiting. */unsigned char  cursor (unsigned char onoff);/* If onoff is 1, a cursor is display when waiting for keyboard input. If * onoff is 0, the cursor is hidden when waiting for keyboard input. The * function returns the old cursor setting. */unsigned char  revers (unsigned char onoff);/* Enable/disable reverse character display. This may not be supported by * the output device. Return the old setting. */unsigned char  textcolor (unsigned char color);/* Set the color for text output. The old color setting is returned. */unsigned char  bgcolor (unsigned char color);/* Set the color for the background. The old color setting is returned. */unsigned char  bordercolor (unsigned char color);/* Set the color for the border. The old color setting is returned. */void  chline (unsigned char length);/* Output a horizontal line with the given length starting at the current * cursor position. */void  chlinexy (unsigned char x, unsigned char y, unsigned char length);/* Same as "gotoxy (x, y); chline (length);" */void  cvline (unsigned char length);/* Output a vertical line with the given length at the current cursor * position. */void  cvlinexy (unsigned char x, unsigned char y, unsigned char length);/* Same as "gotoxy (x, y); cvline (length);" */void  cclear (unsigned char length);/* Clear part of a line (write length spaces). */void  cclearxy (unsigned char x, unsigned char y, unsigned char length);/* Same as "gotoxy (x, y); cclear (length);" */void  screensize (unsigned char* x, unsigned char* y);/* Return the current screen size. *//* End of conio.h */#endif